name: Release

on:
  push:
    tags:
      - 'v*' # 当推送以v开头的标签时触发

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build for ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            artifact_name: screen_time-linux-x86_64
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            artifact_name: screen_time-windows-x86_64.exe
          - target: x86_64-apple-darwin
            os: macos-latest
            artifact_name: screen_time-macos-x86_64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          target: ${{ matrix.target }}

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2
        with:
          target: ${{ matrix.target }}

      - name: Build release binary
        run: |
          cargo build --release --target ${{ matrix.target }}
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            cp target/${{ matrix.target }}/release/screen_time.exe ${{ matrix.artifact_name }}
          else
            cp target/${{ matrix.target }}/release/screen_time ${{ matrix.artifact_name }}
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: ${{ matrix.artifact_name }}

  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Generate changelog
        id: changelog
        run: |
          # 获取上一个标签
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD~1 2>/dev/null || echo "")
          
          if [ -n "$PREVIOUS_TAG" ]; then
            CHANGELOG=$(git log --pretty=format:"- %s" $PREVIOUS_TAG..HEAD)
          else
            CHANGELOG=$(git log --pretty=format:"- %s" --reverse)
          fi
          
          echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.get_version.outputs.VERSION }}
          name: Release ${{ steps.get_version.outputs.VERSION }}
          body: |
            ## 更新内容
            
            ${{ steps.changelog.outputs.CHANGELOG }}
            
            ## 下载
            
            请根据您的操作系统选择相应的二进制文件：
            
            - **Linux**: `screen_time-linux-x86_64`
            - **Windows**: `screen_time-windows-x86_64.exe`
            - **macOS**: `screen_time-macos-x86_64`
          files: |
            artifacts/screen_time-linux-x86_64
            artifacts/screen_time-windows-x86_64.exe
            artifacts/screen_time-macos-x86_64
          draft: false
          prerelease: false
